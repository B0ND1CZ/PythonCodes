# -*- coding: utf-8 -*-
"""lista atividades 10.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TiB-d0Uh8etE9XaMf5KbSfWghGx71FcF

Atividade 1
"""

matriz = [[0, 0] , [0, 0]]
for l in range(0, 2):
  for c in range(0, 2):
    matriz[l][c] = int(input(f'digite um valor para [{l}, {c}]: '))
print('-=' * 0)
for l in range(0, 2):
  for c in range(0, 2):
    print(f'[{matriz [l][c]: ^5}]', end='')
  print()

"""Atividade 2"""

import random

n_linhas, n_colunas = 10, 3 

notas_alunos = [[round(random.random()*10, 0) for x in range(n_colunas)] for y in range(n_linhas)] 

provas_menor_nota = {"p1": 0, "p2": 0, "p3":0} 

for indice_aluno, aluno in enumerate(notas_alunos):

   menor_nota = {"prova": 1, "nota": aluno[0]} 
   if(aluno[1]<menor_nota["nota"]):

       menor_nota["prova"] = 2

       menor_nota["nota"] = aluno[1]

   if(aluno[2]<menor_nota["nota"]):

       menor_nota["prova"] = 3

       menor_nota["nota"] = aluno[2]


   if(menor_nota["prova"] == 1):

       provas_menor_nota["p1"] += 1

   if(menor_nota["prova"] == 2):

       provas_menor_nota["p2"] += 1

   if(menor_nota["prova"] == 3):

       provas_menor_nota["p3"] += 1

   

   print(f'Aluno {indice_aluno}. Menor nota na prova {menor_nota["prova"]}: {menor_nota["nota"]}')

print(f'Menor nota por prova. Prova 1: {provas_menor_nota["p1"]}; Prova 2: {provas_menor_nota["p2"]}; Prova 3: {provas_menor_nota["p3"]};')

"""Atividade 3"""

import random

def criar_matriz(num_linhas, num_colunas):
  matriz = []
  for i in range(num_linhas):
    linha = []
    for j in range(num_colunas):
      x = random.randint(0,5)
      linha.append(x)
    matriz.append(linha)
  return matriz
matriz = criar_matriz(10,20)
print(f'Matriz Principal: {matriz}')
somas = []

for l in range(10):
  for c in range(1):
    a = matriz[l][0]
    b = matriz[l][1]
    z = matriz[l][2] ##ESSE É O C
    d = matriz[l][3]
    e = matriz[l][4]
    f = matriz[l][5]
    g = matriz[l][6]
    h = matriz[l][7]
    i = matriz[l][8]
    j = matriz[l][9]
    k = matriz[l][10]
    y = matriz[l][11] ##ESSE É O L
    m = matriz[l][12]
    n = matriz[l][13]
    o = matriz[l][14]
    p = matriz[l][15]
    q = matriz[l][16]
    r = matriz[l][17]
    s = matriz[l][18]
    u = matriz[l][19]
    soma = a + b + z + d + e + f + g + h + i + j + k + y + m + n + o + p + q + r + s + u
    somas.append(soma)
print(f'Somas de cada Linha: {somas}')


def criar_matrizR(num_linhas, num_colunas):
  R = []
  for i in range(num_linhas):
    linha = []
    for j in range(num_colunas):
      x = 0
      linha.append(x)
    R.append(linha)
  return R
R = criar_matrizR(10,20)

for l in range(10):
  for c in range(20):
    Multi = (matriz[l][c] * somas[l])
    R[l][c] = Multi
print(f'Matriz resutalnte:{R}')